services:
  nginx:
    container_name: "nginx"
    image: nginx
    build:
      context: ./client-react/
      dockerfile: prod.Dockerfile
    volumes:
      - type: bind
        source: ~/certs/fullchain.pem
        target: /ssl/fullchain.pem
      - type: bind
        source: ~/certs/privkey.pem
        target: /ssl/privkey.pem
    ports:
      - 443:443
    networks:
      - frontend

  api-golang:
    container_name: "api-golang"
    env_file: ".env"
    image: api-golang-prod
    build:
      context: ./api-golang/
      target: prod
    init: true
    networks:
      - backend
      - frontend
    depends_on:
      - db
    ports:
      - 3000:3000
  db:
    image: postgres:12.19-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - PGUSER=${POSTGRES_USER}
    networks:
      - backend
    ports:
      - 5432:5432
volumes:
  pgdata:
networks:
  backend:
  frontend:
